security:
#    encoders:
#        # Our user class and the algorithm we'll use to encode passwords
#        # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
#        AppBundle\Entity\User: bcrypt
    encoders:
        Ztec\Security\ActiveDirectoryBundle\Security\User\adUser : plaintext

#    providers:
#        # in this example, users are stored via Doctrine in the database
#        # To see the users at src/AppBundle/DataFixtures/ORM/LoadFixtures.php
#        # To load users from somewhere else: http://symfony.com/doc/current/cookbook/security/custom_provider.html
#        database_users:
#            entity: { class: AppBundle:User, property: username }
    providers:
        active_directory_provider:
              id: ztec.security.active.directory.user.provider

    # http://symfony.com/doc/current/book/security.html#firewalls-authentication
    firewalls:
        secured_area:
            # this firewall applies to all URLs
            pattern: ^/

            # but the firewall does not require login on every page
            # denying access is done in access_control or in your controllers
            anonymous: true

            # This allows the user to login by submitting a username and password
            # Reference: http://symfony.com/doc/current/cookbook/security/form_login_setup.html
            form_login:
                # The route name that the login form submits to
                check_path: security_login_check
                # The name of the route where the login form lives
                # When the user tries to access a protected page, they are redirected here
                login_path: security_login_form
                # Secure the login form against CSRF
                # Reference: http://symfony.com/doc/current/cookbook/security/csrf_in_login_form.html
                csrf_provider: security.csrf.token_manager

            logout:
                # The route name the user can go to in order to logout
                path: security_logout
                # The name of the route to redirect to after logging out
                target: homepage
        default:
            # this firewall applies to all URLs
            pattern: ^/
            anonymous:  ~
            http_basic: ~
            provider: active_directory_provider
            active_directory:
                login_path: security_login_form
                check_path: security_login_check
                success_handler: login_success_handler
            remember_me:
                key:      "%secret%"
                lifetime: 31536000 # 365 days in seconds
                path:     /
                domain:   ~
            logout:
                csrf_parameter:       _csrf_token
                csrf_token_generator: form.csrf_provider
                csrf_token_id:        logout
                path:                 security_logout
                target:               homepage

    access_control:
        # this is a catch-all for the admin area
        # additional security lives in the controllers
        - { path: ^/admin, roles: ROLE_ADMIN }
